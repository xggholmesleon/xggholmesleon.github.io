[{"title":"Hello World","date":"2021-02-12T14:19:26.945Z","path":"2021/02/12/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post 1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"双节点ES集群部署(三)","date":"2020-07-03T13:56:29.000Z","path":"2020/07/03/双节点ES集群部署-三/","text":"1.Elasticsearch插件安装－实现更多功能1.1IK分词器插件安装Tip1:IK分词器版本与ES版本保持一致 版本对应关系可查阅网址：http://github.com/medcl/elasticsearch-analysis-ik/releases 1.1.1下载插件： 1wget https:&#x2F;&#x2F;github.com&#x2F;medcl&#x2F;elasticsearch-analysis-ik&#x2F;releases&#x2F;downloads&#x2F;v6.4.2&#x2F;elasticsearch-analysis-ik-6.4.2.zip 1.1.2解压至目录elasticsearch-6.4.2/plugins/elasticsearch-analysis-ik-6.4.2 1.1.3重启es查看插件放置结果如下图所示： 1.2elasticsearch-head可视化插件安装1234git clone git:&#x2F;&#x2F;github.com&#x2F;mobz&#x2F;elasticsearch-head.gitcd elasticsearch-headnpm installnpm run start Tip2:没有git和npm指令的安装下PS:我的CentOS 6.5(final)上原先就没有这两个，都是后安装的 1.2.1配置elasticsearch/config目录下的elasticsearch.yml在文件末尾添加代码如下图所示： 在elasticsearch-head目录下启动npm： 启动结果如下： References:1.https://www.cnblogs.com/jinfanfu/p/12468858.html(CentOS安装node)2.https://www.cnblogs.com/lcword/p/5917295.html(Linux的BOOTPROTO动态静态IP设置)3.https://www.jianshu.com/p/04f4d7b4a1d3"},{"title":"双节点ES集群部署(二)","date":"2020-07-03T13:02:55.000Z","path":"2020/07/03/双节点ES集群部署-二/","text":"1.启动ELASTICSEARCH集群前准备1.1 创建用户及用户组Elasticsearch不能以root启动，因此需要添加非root用户: 123groupadd esuseradd es -g eschown -R es:es .&#x2F;elasticsearch-6.4.2 为非root用户添加登陆密码： 1passwd es 我这里创建好后查看上菜单栏System–&gt;Administration–&gt;Users and Groups的结果如下： 开机的登录用户时可切换es用户 1.2 关闭防火墙1service iptables stop 以上命令适用于CentOS 6 CentOS 7 版本及以上使用命令如下： 12systemctl stop firewalldsystemctl disable firewalld 至此，两个节点之间通信的前提条件准备好了 2.启动ELASTICSEARCH集群2.1 切换至es用户1su es 2.2 在两个节点上分别启动es服务12cd bin.&#x2F;elasticsearch -d # 设置后台启动 2.3 访问浏览且查看启动效果：节点1启动效果如下图所示： 节点2启动效果如下图所示： 2.4命令行查看集群信息：1curl http:&#x2F;&#x2F;127.0.0.1:9200&#x2F;_cat&#x2F;allocation?v 结果如下： 2.5postman上插入数据 curl查看数据入库结果如下图所示： Other:查看集群信息目录命令： References:1.https://blog.csdn.net/genghaihua/article/details/81479619"},{"title":"双节点ES集群部署(一)","date":"2020-07-03T10:33:10.000Z","path":"2020/07/03/双节点ES集群部署-一/","text":"1.环境准备1.1本文实验准备搭建双节点Elastisearch集群，准备两台Linux CentOS 6.5(Final) 64bit虚机节点1: 192.168.3.187节点2: 192.168.3.179(克隆机) 1.1.1 CentOS 6.5克隆机教程参考百度经验，需要配置下/etc/sysconfig/network文件，分别给两台机器修改不同的主机名，我这里是改成localhost1和localhost2 1.1.2 还要再配置下克隆机/etc/sysconfig/network-scripts/ifcfg-eth0文件，删除文件中UUID部分并设置对应的IPADDR以及GATEWAY（我这里的两个节点的BOOTPROTO均设置为static静态IP） 1.2 Elasticsearch安装包准备https://artifacts.elasticsearch.co/downloads/elasticsearch/elasticsearch-6.4.2.tar.gzTip1:自己选择对应版本下载，我这里的是6.4.2版本 同时：将安装包存放在/opt/elasticsearch下并解压 1.3 CentOS 6.5 java环境准备(安装jdk1.8)http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.htmlTip2:需要注册下载，还要填写公司地址和办公电话，暂时还没有工作的童鞋随意填下 同时：将安装包存放在/usr/local/java下并解压，并设置/etc/profile下的环境变量配置总共三个参数:JAVA_HOME,JRE_HOME,CLASS_PATH和PATH 最后：别忘了刷新环境变量(有时候刷新完找不到java路径就多刷新几次) 1source &#x2F;etc&#x2F;profile 检验是否安装成功： 1java -version 我这里成功安装结果如下： 2.节点配置2.1编辑安装目录下/config/elasticsearch.yml文件节点192.168.3.187配置如下： 12345cluster.name: holmes # 集群名称，两个节点需一致node.name: holmes-1 # 节点名称，两个节点需分别起名network.host: 192.168.3.187 # 绑定的地址network.bing_host: 0.0.0.0 # 设置本机可访问discovery.zen.ping.unicast.hosts: [&quot;192.168.3.187&quot;,&quot;192.168.3.179&quot;] # hosts列表 同理节点192.168.3.179配置如下： 12345cluster.name: holmes node.name: holmes-2 network.host: 192.168.3.179network.bing_host: 0.0.0.0 discovery.zen.ping.unicast.hosts: [&quot;192.168.3.187&quot;,&quot;192.168.3.179&quot;] References:1.https://jingyan.baidu.com/article/ac6a9a5e169b5d2b653eacbe.html(CentOS6.5虚拟机克隆教程)2.https://www.cnblogs.com/wangmo/p/7880521.html"},{"title":"hexo趟坑","date":"2020-06-21T09:50:45.000Z","path":"2020/06/21/hexo趟坑/","text":"Q1:4000端口被占用解决办法：_config.yml内加上如下代码更改hexo-server运行时的端口号： 1234server: port: 8000 # 此处改成8000端口 compress: true header: true Q2: Cannot GET/XXXX解决办法：初始化分类子目录 如初始化分类目录： 1hexo new page &quot;categories&quot; 最后会在source文件夹初始化目录并生成index文件 Q3:FATAL duplicated mapping key at line XXX, column XXX解决办法：注意缩进 其中官方配置说明：hexo2.x.x 有冒号后换行的空格缩进，而hexo3.x.x 没有缩进要求 若依旧出现错误，两种办法都试下即可 Q4: 主题详细配置－头像不显示解决办法：主题配置文件中配置如下 如图，此处我的图片存放路径为themes/yilia/source/img/xxx.jpg同理，网页导航栏logo设置也需要到对应路径下 Q5:部署到远端的网页图片不能显示，本地也不能显示解决办法：1．修改主目录下的_config.yml参数 1post_asset_folder: true 2．安装图片路径转换插件 1npm install https:&#x2F;&#x2F;github.com&#x2F;7ym0n&#x2F;hexo-asset-image --save 3.安装完上述插件后，当我们创建新文章时 hexo n “xxx” ，就自动在 xxx.md 文件的同目录下创建一个同名的文件夹，我们需要将文章使用的图片放在该文件夹中 我的目录结构如下： ４．最后，图片引用的方法1)直接使用代码 ![](hexo.png)（虽然没有写文件夹的名字，但是可以的），hexo.png 是我们存在 new article 文件夹内的图片。这时你会发现markdown预览中无法显示这张图片，但是当你将博客上传到网站时，网站上是可以正常显示的; 2)使用代码 ![](new article/hexo.png)不仅可以本地预览，上传到网站也可以正常显示; 3)本地无法预览也是件很不舒服的事情，其实我们还可以另外创建一个文件夹 pictures ，里面专门存放所有文章的图片，代码 不仅可以本地预览，上传到网站也可以正常显示。 注意： 不管采取哪种办法，都要创建一个和md文件同名的文件夹，里面放上需要的图片。如果 2和3 中代码无法实现网站上的正常显示，那就使用 1 中的代码。因为 2和3 中代码我无法保证每个人都成功。 本文使用的方法是第一种 References:1.https://www.it1352.com/710717.html 2.https://www.cnblogs.com/Sroot/p/6305938.html 3.https://www.nickyam.com/tech/hexo-generate-sitemap.html 4.https://www.jianshu.com/p/3a05351a37dc 5.https://blog.csdn.net/qq_36408085/article/details/104117319 6.https://blog.csdn.net/xuezhisdc/article/details/53130383（注释参考）"},{"title":"hexo静态博客搭建","date":"2020-06-20T14:08:58.000Z","path":"2020/06/20/hexo静态博客搭建/","text":"1.启动虚拟机：Ubuntu 16.041.1 虚拟网络编辑器配置​ error:设备“VMnet0”上的网桥没有运行。该虚拟机无法与此主机或网络上的其他主机进行通 ​ 参考csdn:https://blog.csdn.net/wjb123sw99/article/details/94722505 ​ 1.1.1显示连接成功如下图： ​ 1.1.2通过桥接模式连接： 2.部署hexo安装环境（需要安装Node.js和Git）参考教程：https://hexo.io/docs/#Install-Hexo 2.1NPM安装HEXO1npm install -g hexo-cli 2.1.1安装完成结果如下： 2.2 初始化HEXO工作目录1hexo init &lt;folder&gt; 2.2.1 部署目录结果： 2.2.2 其他问题如图： 2.2.3 按提示解决问题结果如下图： ​ 按照提示自行选择解决即可 2.2.4 查看hexo目录结构如下图： 文件目录有两个文件：_config.yml站点配置文件和package.json默认安装的应用程序数据 其他四个文件夹：1.node_modules下存放大量package.json文件； ​ 2.scaffolds用于存放创建的hexo的新帖子； ​ 3.source源文件夹用于放置网络博客内容的地方； ​ 4.themes用于结合站点内容构成静态博客。 3.启动hexo并进行相关配置3.1 启动命令：1hexo s 3.2 启动界面 3.3 创建第一个博客3.3.1 新建博客名称 1hexo n &quot;XXX&quot; 3.3.2 进入目录source/_post下编辑博客内容 1vim xxx.md 3.3.3 回到主目录清除旧的database 1hexo clean 清理结果如下： 3.3.4 产生博客 1hexo g 产生结果如下： 重启hexo结果如下： 至此我们就可以看见刚刚新建的博客了~ 4.部署到Github上公开使用4.1 在Github上创建一个repository名称格式为:用户名.github.io（必须这样命名！！！） 如上图所示，一个空的地址名为“用户名.github.io”的仓库创建好了~ 4.2 在自己的blog目录下安装git部署所需的插件 安装hexo-deployer-git插件的结果如上图所示 4.3 配置博客目录下的_config.yml配置参数如下： 需要配置type、repo和branch参数 4.4 将hexo目录推送部署到远端仓库 博客地址建好成果如下： 至此就不用通过localhost:4000访问博客地址了~ 5. 关于博客内容和主题的设置（先将内容搞起来，以后再慢慢调试自己喜欢的主题）5.1 克隆主题到主题文件夹下 5.2 配置_config.xml的theme参数 5.3 删除原有库产生新库后查看更新结果 本地查看结果： 5.4 将风格推送到远端Github库中 5.4.1 也可以通过以下方式同步主题： 12cd &quot;你的博客目录下&quot;&#x2F;themes&#x2F;yilia git pull 5.5 查看推送结果 好的，至此已完成主题的更换。接下来该去修改博客的内容和其他细节了~ 修改的主目录的_config.yml配置部分如下，后期继续配置，现在先配到这里 博客网页展示如下图："},{"title":"MyFirstblog","date":"2020-06-18T15:25:30.000Z","path":"2020/06/18/MyFirstblog/","text":"Chapter Onecontent one Chapter Twocontent two References"}]